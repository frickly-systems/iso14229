load("@rules_fuzzing//fuzzing:cc_defs.bzl", "cc_fuzz_test")
load("@protobuf//bazel:proto_library.bzl", "proto_library")
load("@protobuf//bazel:cc_proto_library.bzl", "cc_proto_library")

# --- Generic fuzzer ---
cc_fuzz_test(
    name = "fuzz_server",
    srcs = [
        "fuzz_server.cc",
        "//src:iso14229.h",
        "//src:iso14229.c",
    ],
    defines = ["UDS_TP_ISOTP_MOCK","UDS_CUSTOM_MILLIS","UDS_LINES"],
    copts = ["-g","-O0"],
    size = "small",
    corpus = [":corpus_filegroup"],
)

filegroup(
    name = "corpus_filegroup",
    srcs = glob(["outputs/corpus/**"], allow_empty = True),
)

# --- Structure-aware fuzzer ---

proto_library(
    name = "uds_input_proto",
    srcs = ["uds_input.proto"],
)

cc_proto_library(
    name = "uds_input_cc_proto",
    deps = [":uds_input_proto"],
)

cc_fuzz_test(
    name = "fuzz_server_proto",
    srcs = [
        "fuzz_server_proto.cc",
        "//src:iso14229.h",
        "//src:iso14229.c",
    ],
    defines = ["UDS_TP_ISOTP_MOCK","UDS_CUSTOM_MILLIS","UDS_LINES"],
    copts = ["-g","-O0"],
    size = "small",
    deps = [
        ":uds_input_cc_proto",
        "@libprotobuf-mutator//:protobuf-mutator",
        "@protobuf//:protobuf",
    ],
    # Seed corpus and generated corpus for structure-aware inputs:
    corpus = [":proto_corpus"],
)

# Corpus for structure-aware proto fuzzer
filegroup(
    name = "proto_corpus",
    srcs = glob(["outputs/proto/corpus/**", "outputs/proto/seed_corpus/bin/**"], allow_empty = True),
)
